@model (List<ReadVM<DepartmentVM>>, List<string>)

<link rel="stylesheet" href="~/css/department.css" />
<main class="main">
    <div class="topbar">
        <input type="text" placeholder="Search" style="padding: 8px 12px; border-radius: 5px; border: 1px solid #ccc; width: 300px;">
        <div><img src="images/man-user-circle-icon copy.svg" alt="User" style="width: 50px; height: 50px; border-radius: 50%;"></div>
    </div>
    <div class="title">Department</div>
    <div class="breadcrumb">Manage / <strong>Department</strong></div>
    <button class="add-button">Add Subject</button>
    <div class="table-container">
        <table>
            <thead>
                <tr>
                    <th>Department Name</th>
                    <th>Location</th>
                </tr>
            </thead>
            <tbody>
                @{
                    for(int i = 0; i < Model.Item1.Count; i++)
                    {
                        <tr>
                            <td>@Model.Item1[i].data.name</td>
                            <td>@Model.Item2[i]</td>
                            <td class="actions">
                                <img src="images/edit-05-svgrepo-com.svg" class="edit-icon" width="18" onclick="toggleEdit(this)">
                                <img src="images/trash.png" class="delete-icon" width="18">
                            </td>
                        </tr>
                    }
                }
                    </tr>
                </tbody>
            </table>
        </div>
    </main>
    <script>
        function toggleEdit(icon) {
          const row = icon.closest('tr');
          const isEditing = row.getAttribute('data-editing') === 'true';
          const tds = row.querySelectorAll('td');
          for (let i = 1; i <= 3; i++) {
            tds[i].contentEditable = !isEditing;
            tds[i].style.backgroundColor = !isEditing ? '#289c16d4' : '';
          }
          row.setAttribute('data-editing', !isEditing);
        }
    </script>
